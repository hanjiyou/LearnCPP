							一.基础知识
(一)数组与指针
1.const指针的各种形式
①const char * ptr:定义一个指向字符常量的指针，因为值是常量 所以无法修改该指针指向的元素的指
②char const * ptr:同1
③char * const ptr:定义一个指针常量，不能修改该指针的地址，但是可以修改指向的值
2.指针与数组
相同:
①c++将数组名解释为数组第一个元素的地址
②数组表达式array[1],编译器将看作是*(array+1)
区别:
①数组名是常量不可修改，指针不是可以修改
②对数组应用sizeof array得到的是数组的字节长度，对指针得到的是指针指向类型的字节数
3.数组声明的两种方式
(1)使用数组声明创建，将采用静态联编，长度在编译时设置:int arr[4]
(2)使用new[]创建数组，采用动态联编，即运行时为数组分配空间:int * arr=new int[size]
4.cout在打印char类型的地址(char数组名，char指针以及双引号括起的字符串)时，会输出该地址的字符然后继续打印，直到遇到空字符，如果想输出地址可通过强转(int*)point
5.常用函数:
(1)c风格字符串
①strlen(array)获取字符数组的有效字节数
②strcpy(newStr,oldStr)
(2)常用函数
①sizeof(param)获取参数占用的字节数
6.三种数组比较
(1)vector 存储在堆 类似string，动态数组，可运行阶段设置对象长度，本质是使用new和delete，功能强大，效率稍低
(2)array 存储在栈
(3)数组 栈
(4)array和vector赋值的时候  可使用arrayName.at(index)复制，防止下标过界，过界会报错，如果直接使用[]如果下标过界不报错但程序无法正确执行